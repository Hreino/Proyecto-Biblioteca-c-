@model ProyectoBiblioteca.Models.Editorial

@{
    ViewBag.Title = "Create";
}

<h2 class="colortitulo">Nuevo Editorial</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            <label class="control-label col-md-2 colortitulo">Nombre de editorial: </label>
            <div class="col-md-10">
                @*Iconos dentro del input*@
                <div class="input-group">
                    <span class="input-group-addon"> <i class="fas fa-file-signature"></i></span>
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @*Iconos dentro del input*@
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 colortitulo">País: </label>

            <div class="col-md-10">
                @*Iconos dentro del input*@
                <div class="input-group">
                    <span class="input-group-addon"> <i class="fas fa-flag"></i></span>
                    @Html.EditorFor(model => model.Pais, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @*Iconos dentro del input*@
                @Html.ValidationMessageFor(model => model.Pais, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 colortitulo">Dirección: </label>
            <div class="col-md-10">
                @*Iconos dentro del input*@
                <div class="input-group">
                    <span class="input-group-addon"> <i class="fas fa-map-pin"></i></span>
                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })

                </div>
                @*Iconos dentro del input*@
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 colortitulo">Teléfono: </label>
            <div class="col-md-10">
                @*Iconos dentro del input*@
                <div class="input-group">
                    <span class="input-group-addon"> <i class="fas fa-mobile"></i></span>
                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @*Iconos dentro del input*@
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Agregar Editorial" class="btn btn-success " />

            </div>
        </div>
    </div>
}

@*Botón de Regresar*@
<div>

    <button class="btn btn-lg btn-primary" title="Regresar al Listado">
        @Html.ActionLink("   ", "Index", null, new { @class = "fas fa-chevron-circle-left" })
    </button>
</div>
@*Botón de Regresar*@


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

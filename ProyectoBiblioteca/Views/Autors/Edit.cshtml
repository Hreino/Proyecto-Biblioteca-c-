@model ProyectoBiblioteca.Models.Autor

@{
    ViewBag.Title = "Edit";
}

<h2 class="colortitulo">Información del Autor</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id_autor)

        <div class="form-group">
            <label class="control-label col-md-2 colortitulo">Nombre: </label>
            <div class="col-md-10">


                @*Iconos dentro del Input*@
                <div class="input-group">
                    <span class="input-group-addon"> <i class="fas fa-file-signature"></i></span>
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @*Iconos dentro del Input*@


                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
            </div>

        <div class="form-group">
            <label class="control-label col-md-2 colortitulo">Apellidos: </label>
            <div class="col-md-10">


                @*Iconos dentro del Input*@
                <div class="input-group">
                    <span class="input-group-addon"> <i class="fas fa-file-signature"></i></span>
                    @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @*Iconos dentro del Input*@


                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
            </div>
            </div>

        <div class="form-group">
            <label class="control-label col-md-2 colortitulo">Sexo: </label>
           
            <div class="col-md-10">


                @*Iconos dentro del Input*@
                <div class="input-group">
                    <span class="input-group-addon"><i class="fas fa-male"></i> <i class="fas fa-female"></i></span>
                    @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @*Iconos dentro del Input*@


                @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
            </div>
            </div>

        <div class="form-group">
            <label class="control-label col-md-2 colortitulo">País: </label>
            
            <div class="col-md-10">

                @*Iconos dentro del Input*@
                <div class="input-group">
                    <span class="input-group-addon"><i class="fas fa-flag"></i></span>
                    @Html.EditorFor(model => model.Pais, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @*Iconos dentro del Input*@

                @Html.ValidationMessageFor(model => model.Pais, "", new { @class = "text-danger" })
            </div>
            </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="far fa-save btn btn-info btn-lg col-lg-2" title="Guardar Cambios"></button>
                 
            </div>
        </div>
    </div>
}

    <div>

        @*Botón Regresar*@
        <button class="btn btn-lg btn-primary" title="Regresar al Listado">
            @Html.ActionLink("   ", "Index", null, new { @class = "fas fa-chevron-circle-left" })
        </button>
        @*Botón Regresar*@
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
